<section class="d-flex justify-content-center bg-success-subtle flex-column" id="headerProduct">
    <h1 class="d-flex justify-content-center bg-success-subtle ">Borrar Producto</h1>
    <div class="d-flex container-fluid justify-content-between align-items-center" {{!-- style="padding-left: 20px;"
        --}}>
        <div style="padding-left: 20px;" class="d-flex flex-column align-items-center">
            <a href="/current" style="color: black;">
                <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor"
                    class="bi bi-person-circle" viewBox="0 0 16 16">
                    <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
                    <path fill-rule="evenodd"
                        d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1" />

                </svg>
            </a>
            <p>{{firstName}} {{lastName}}</p>

        </div>
        <button type="button" class="btn btn-secondary" id="logoutButton" style="height: 50%;">Cerrar sesion</button>
    </div>
</section>

<form class="row g-3" id="deleteForm">
    <div class="col-md-4">
        <label for="Id" class="form-label">Id</label>
        <input type="text" class="form-control" id="Id" placeholder="Id" name="Id">
    </div>

    <div class="col-12">
        <button class="btn btn-primary" type="submit">Submit form</button>
    </div>
</form>


<script src="/socket.io/socket.io.js"></script>
{{!-- <script src="js/index.js"></script> --}}

<script>


document.getElementById('deleteForm').addEventListener('submit',async function(event) {
    event.preventDefault();

    const id = document.getElementById('Id').value;

    {{!--  fetch('api/products/' + id, {
        method: 'DELETE',
        body: JSON.stringify({ Id: id })

    })  --}}

     try {
        const response = await fetch('api/products/' + id, {
            method: 'DELETE',
            body: JSON.stringify({ Id: id })
        });

        if (response.ok) {
            const responseData = await response.json();
            alert(responseData.message); 
        } else {
            const errorData = await response.json();
            alert(errorData.error); 
        }
    } catch (error) {
        console.error('Error de red:', error);
        alert('Error de red: ' + error.message); 
    }

});


</script>